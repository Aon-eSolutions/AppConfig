<!--

    Copyright (c) 2012 Aon eSolutions

    Licensed under the Apache License, Version 2.0 (the "License"); you may not
    use this file except in compliance with the License. You may obtain a copy of
    the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
    License for the specific language governing permissions and limitations under
    the License.

-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/neo4j http://www.springframework.org/schema/data/neo4j/spring-neo4j-2.0.xsd">

	<!-- Import the bits that are configurable -->
	<beans:import resource="includes/applicationContext-security-${security.authentication.name}.xml"/>

	<!-- ACL Configuration - More complicated, but a solid architecture
	<beans:bean id="aclService" class="org.aon.esolutions.appconfig.security.Neo4jAclService">
		<beans:property name="defaultGrantedPermissions">
			<beans:map>
				<beans:entry key="org.aon.esolutions.appconfig.model.Application">
					<beans:array>
						<util:constant static-field="org.springframework.security.acls.domain.BasePermission.READ"/>
						<util:constant static-field="org.springframework.security.acls.domain.BasePermission.CREATE"/>
						<util:constant static-field="org.springframework.security.acls.domain.BasePermission.WRITE"/>
						<util:constant static-field="org.springframework.security.acls.domain.BasePermission.DELETE"/>
					</beans:array>
				</beans:entry>
			</beans:map>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
	    <beans:property name="permissionEvaluator">
	        <beans:bean id="permissionEvaluator" class="org.springframework.security.acls.AclPermissionEvaluator">
	        	<beans:constructor-arg ref="aclService"/>
	        </beans:bean>
	    </beans:property>
	</beans:bean>
	-->
	
	<!-- Simple Permission Evaluator - inspects the contents of the object for security -->
	<beans:bean id="permissionEvaluator" class="org.aon.esolutions.appconfig.util.AppConfigPermissionEvaluator"/>
	
	<beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
	    <beans:property name="permissionEvaluator" ref="permissionEvaluator" />
	</beans:bean>
	
	<!-- Sets it up so we don't get a login form, but get an http 403 for anonymous users -->
	<beans:bean id="forbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>
	
	<!-- Web Application Security -->
	<global-method-security secured-annotations="enabled" pre-post-annotations="enabled">
	    <expression-handler ref="expressionHandler" />
	</global-method-security>
	
	<http pattern="/static/**" security="none"/>
	
	<http auto-config="true" use-expressions="true" entry-point-ref="forbiddenEntryPoint">
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/**" access="permitAll" />
	</http>

</beans:beans>
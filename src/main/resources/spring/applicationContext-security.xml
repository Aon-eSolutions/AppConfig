<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!-- Get the properties to configure security -->
	<beans:bean id="propertyPlaceholderConfigurer"
		class="com.crygier.spring.util.SystemPropertyPlaceholderConfigurer">
		<beans:property name="systemProperty" value="security.properties.location" />
		<beans:property name="ignoreResourceNotFound" value="true" />
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:security.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- LDAP Configuration - TODO: Move this into a customized class that reads properties and kicks out proper authentication type - spring wrapper -->
	<beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<beans:constructor-arg value="${security.ldap.server.url}" />
		<beans:property name="userDn" value="${security.ldap.server.manager.dn}" />
		<beans:property name="password" value="${security.ldap.server.manager.password}" />
	</beans:bean>
	
	<beans:bean id="ldapUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<beans:constructor-arg index="0" value="${security.ldap.user.search.base}"/>
		<beans:constructor-arg index="1" value="${security.ldap.user.search.filter}"/>
		<beans:constructor-arg index="2" ref="contextSource"/>
	</beans:bean>

	<beans:bean id="ldap" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<beans:constructor-arg>
			<beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<beans:constructor-arg ref="contextSource" />
				<beans:property name="userSearch" ref="ldapUserSearch"/>
			</beans:bean>
		</beans:constructor-arg>
		<beans:constructor-arg>
			<beans:bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
				<beans:constructor-arg ref="contextSource" />
				<beans:constructor-arg value="${security.ldap.group.search.base}" />
				<beans:property name="groupSearchFilter" value="${security.ldap.group.search.filter}" />
			</beans:bean>
		</beans:constructor-arg>
	</beans:bean>

	<!-- Web Application Security -->
	<http pattern="/static/**" security="none"/>
	
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/**" access="isAuthenticated()" />
	</http>

	<authentication-manager>
		<authentication-provider ref="${security.user.service.name}" />
	</authentication-manager>
	
	<user-service id="testService">
		<user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
		<user name="bob" password="bobspassword" authorities="ROLE_USER" />
	</user-service>

</beans:beans>